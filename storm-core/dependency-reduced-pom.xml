<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <parent>
    <artifactId>storm</artifactId>
    <groupId>org.apache.storm</groupId>
    <version>0.10.1-SNAPSHOT</version>
  </parent>
  <modelVersion>4.0.0</modelVersion>
  <groupId>org.apache.storm</groupId>
  <artifactId>storm-core</artifactId>
  <name>Storm Core</name>
  <description>Storm Core Java API and Clojure implementation.</description>
  <build>
    <sourceDirectory>src/jvm</sourceDirectory>
    <testSourceDirectory>test/jvm</testSourceDirectory>
    <resources>
      <resource>
        <directory>../conf</directory>
      </resource>
      <resource>
        <targetPath>META-INF</targetPath>
        <directory>../</directory>
        <includes>
          <include>NOTICE</include>
        </includes>
      </resource>
      <resource>
        <directory>${basedir}/src/resources</directory>
        <excludes>
          <exclude>storm-core-version-info.properties</exclude>
        </excludes>
      </resource>
      <resource>
        <filtering>true</filtering>
        <directory>${basedir}/src/resources</directory>
        <includes>
          <include>storm-core-version-info.properties</include>
        </includes>
      </resource>
    </resources>
    <testResources>
      <testResource>
        <directory>src/dev</directory>
      </testResource>
      <testResource>
        <directory>test/resources</directory>
      </testResource>
    </testResources>
    <plugins>
      <plugin>
        <groupId>com.theoryinpractise</groupId>
        <artifactId>clojure-maven-plugin</artifactId>
        <extensions>true</extensions>
        <executions>
          <execution>
            <id>compile-clojure</id>
            <phase>compile</phase>
            <goals>
              <goal>compile</goal>
            </goals>
          </execution>
          <execution>
            <id>test-clojure</id>
            <phase>test</phase>
            <goals>
              <goal>test</goal>
            </goals>
            <configuration>
              <junitOutput>true</junitOutput>
              <testScript>test/resources/test_runner.clj</testScript>
              <vmargs>${argLine} ${test.extra.args}</vmargs>
            </configuration>
          </execution>
        </executions>
        <configuration>
          <sourceDirectories>
            <sourceDirectory>src/clj</sourceDirectory>
          </sourceDirectories>
          <testSourceDirectories>
            <testSourceDirectory>test/clj</testSourceDirectory>
          </testSourceDirectories>
          <warnOnReflection>false</warnOnReflection>
          <copyDeclaredNamespaceOnly>true</copyDeclaredNamespaceOnly>
          <copiedNamespaces>
            <copiedNamespace>none</copiedNamespace>
          </copiedNamespaces>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-surefire-report-plugin</artifactId>
        <configuration>
          <reportsDirectories>
            <file>${project.build.directory}/test-reports</file>
          </reportsDirectories>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-shade-plugin</artifactId>
        <version>2.2</version>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>shade</goal>
            </goals>
          </execution>
        </executions>
        <dependencies>
          <dependency>
            <groupId>org.apache.storm</groupId>
            <artifactId>maven-shade-clojure-transformer</artifactId>
            <version>${project.version}</version>
          </dependency>
        </dependencies>
        <configuration>
          <keepDependenciesWithProvidedScope>false</keepDependenciesWithProvidedScope>
          <promoteTransitiveDependencies>false</promoteTransitiveDependencies>
          <createDependencyReducedPom>true</createDependencyReducedPom>
          <minimizeJar>false</minimizeJar>
          <artifactSet>
            <includes>
              <include>ns-tracker:ns-tracker</include>
              <include>hiccup:hiccup</include>
              <include>ring:*</include>
              <include>compojure:compojure</include>
              <include>clj-time:clj-time</include>
              <include>org.apache.thrift:*</include>
              <include>io.netty:netty</include>
              <include>com.google.guava:guava</include>
              <include>org.apache.httpcomponents:http*</include>
              <include>org.apache.zookeeper:zookeeper</include>
              <include>org.apache.curator:*</include>
              <include>com.twitter:carbonite</include>
              <include>com.twitter:chill-java</include>
              <include>org.tukaani:xz</include>
              <include>org.yaml:snakeyaml</include>
              <include>org.jgrapht:jgrapht-core</include>
              <include>org.apache.commons:commons-exec</include>
              <include>commons-io:commons-io</include>
              <include>commons-codec:commons-codec</include>
              <include>commons-fileupload:commons-fileupload</include>
              <include>commons-lang:commons-lang</include>
              <include>com.googlecode.json-simple:json-simple</include>
              <include>org.clojure:math.numeric-tower</include>
              <include>org.clojure:tools.cli</include>
              <include>org.clojure:tools.logging</include>
              <include>org.clojure:tools.macro</include>
              <include>org.clojure:java.jmx</include>
              <include>joda-time:joda-time</include>
              <include>org.eclipse.jetty:*</include>
              <include>com.fasterxml.jackson.core:*</include>
              <include>com.fasterxml.jackson.dataformat:*</include>
              <include>clout:clout</include>
              <include>org.clojure:tools.namespace</include>
              <include>cheshire:cheshire</include>
              <include>org.clojure:core.incubator</include>
            </includes>
          </artifactSet>
          <relocations>
            <relocation>
              <pattern>cheshire</pattern>
              <shadedPattern>org.apache.storm.shade.cheshire</shadedPattern>
            </relocation>
            <relocation>
              <pattern>clojure.tools.logging</pattern>
              <shadedPattern>org.apache.storm.shade.clojure.tools.logging</shadedPattern>
            </relocation>
            <relocation>
              <pattern>clojure.core.incubator</pattern>
              <shadedPattern>org.apache.storm.shade.clojure.core.incubator</shadedPattern>
            </relocation>
            <relocation>
              <pattern>clojure.tools.namespace</pattern>
              <shadedPattern>org.apache.storm.shade.clojure.tools.namespace</shadedPattern>
            </relocation>
            <relocation>
              <pattern>clout</pattern>
              <shadedPattern>org.apache.storm.shade.clout</shadedPattern>
            </relocation>
            <relocation>
              <pattern>compojure</pattern>
              <shadedPattern>org.apache.storm.shade.compojure</shadedPattern>
            </relocation>
            <relocation>
              <pattern>ns_tracker</pattern>
              <shadedPattern>org.apache.storm.shade.ns_tracker</shadedPattern>
            </relocation>
            <relocation>
              <pattern>ns-tracker</pattern>
              <shadedPattern>org.apache.storm.shade.ns-tracker</shadedPattern>
            </relocation>
            <relocation>
              <pattern>hiccup</pattern>
              <shadedPattern>org.apache.storm.shade.hiccup</shadedPattern>
            </relocation>
            <relocation>
              <pattern>ring</pattern>
              <shadedPattern>org.apache.storm.shade.ring</shadedPattern>
            </relocation>
            <relocation>
              <pattern>clj_time</pattern>
              <shadedPattern>org.apache.storm.shade.clj_time</shadedPattern>
            </relocation>
            <relocation>
              <pattern>clj-time</pattern>
              <shadedPattern>org.apache.storm.shade.clj-time</shadedPattern>
            </relocation>
            <relocation>
              <pattern>com.fasterxml</pattern>
              <shadedPattern>org.apache.storm.shade.com.fasterxml</shadedPattern>
            </relocation>
            <relocation>
              <pattern>org.jboss.netty</pattern>
              <shadedPattern>org.apache.storm.shade.org.jboss.netty</shadedPattern>
            </relocation>
            <relocation>
              <pattern>com.google.common</pattern>
              <shadedPattern>org.apache.storm.shade.com.google.common</shadedPattern>
            </relocation>
            <relocation>
              <pattern>com.google.thirdparty</pattern>
              <shadedPattern>org.apache.storm.shade.com.google.thirdparty</shadedPattern>
            </relocation>
            <relocation>
              <pattern>org.apache.http</pattern>
              <shadedPattern>org.apache.storm.shade.org.apache.http</shadedPattern>
            </relocation>
            <relocation>
              <pattern>org.apache.curator</pattern>
              <shadedPattern>org.apache.storm.shade.org.apache.curator</shadedPattern>
            </relocation>
            <relocation>
              <pattern>org.apache.zookeeper</pattern>
              <shadedPattern>org.apache.storm.shade.org.apache.zookeeper</shadedPattern>
            </relocation>
            <relocation>
              <pattern>org.apache.jute</pattern>
              <shadedPattern>org.apache.storm.shade.org.apache.jute</shadedPattern>
            </relocation>
            <relocation>
              <pattern>carbonite</pattern>
              <shadedPattern>org.apache.storm.shade.carbonite</shadedPattern>
            </relocation>
            <relocation>
              <pattern>com.twitter.chill</pattern>
              <shadedPattern>org.apache.storm.shade.com.twitter.chill</shadedPattern>
            </relocation>
            <relocation>
              <pattern>org.tukaani.xz</pattern>
              <shadedPattern>org.apache.storm.shade.org.tukaani.xz</shadedPattern>
            </relocation>
            <relocation>
              <pattern>org.yaml.snakeyaml</pattern>
              <shadedPattern>org.apache.storm.shade.org.yaml.snakeyaml</shadedPattern>
            </relocation>
            <relocation>
              <pattern>org.jgrapht</pattern>
              <shadedPattern>org.apache.storm.shade.org.jgrapht</shadedPattern>
            </relocation>
            <relocation>
              <pattern>org.fusesource</pattern>
              <shadedPattern>org.apache.storm.shade.org.fusesource</shadedPattern>
            </relocation>
            <relocation>
              <pattern>com.metamx.http.client</pattern>
              <shadedPattern>org.apache.storm.shade.com.metamx.http.client</shadedPattern>
            </relocation>
            <relocation>
              <pattern>org.apache.commons.io</pattern>
              <shadedPattern>org.apache.storm.shade.org.apache.commons.io</shadedPattern>
            </relocation>
            <relocation>
              <pattern>org.apache.commons.codec</pattern>
              <shadedPattern>org.apache.storm.shade.org.apache.commons.codec</shadedPattern>
            </relocation>
            <relocation>
              <pattern>org.apache.commons.fileupload</pattern>
              <shadedPattern>org.apache.storm.shade.org.apache.commons.fileupload</shadedPattern>
            </relocation>
            <relocation>
              <pattern>org.apache.commons.exec</pattern>
              <shadedPattern>org.apache.storm.shade.org.apache.commons.exec</shadedPattern>
            </relocation>
            <relocation>
              <pattern>org.apache.commons.lang</pattern>
              <shadedPattern>org.apache.storm.shade.org.apache.commons.lang</shadedPattern>
            </relocation>
            <relocation>
              <pattern>org.json.simple</pattern>
              <shadedPattern>org.apache.storm.shade.org.json.simple</shadedPattern>
            </relocation>
            <relocation>
              <pattern>clojure.math</pattern>
              <shadedPattern>org.apache.storm.shade.clojure.math</shadedPattern>
            </relocation>
            <relocation>
              <pattern>clojure.tools.cli</pattern>
              <shadedPattern>org.apache.storm.shade.clojure.tools.cli</shadedPattern>
            </relocation>
            <relocation>
              <pattern>cljs.tools.cli</pattern>
              <shadedPattern>org.apache.storm.shade.cljs.tools.cli</shadedPattern>
            </relocation>
            <relocation>
              <pattern>clojure.tools.macro</pattern>
              <shadedPattern>org.apache.storm.shade.clojure.tools.macro</shadedPattern>
            </relocation>
            <relocation>
              <pattern>org.joda.time</pattern>
              <shadedPattern>org.apache.storm.shade.org.joda.time</shadedPattern>
            </relocation>
            <relocation>
              <pattern>org.eclipse.jetty</pattern>
              <shadedPattern>org.apache.storm.shade.org.eclipse.jetty</shadedPattern>
            </relocation>
          </relocations>
          <transformers>
            <transformer />
          </transformers>
          <filters>
            <filter>
              <artifact>org.clojure:core.incubator</artifact>
              <excludes>
                <exclude>**/*.clj</exclude>
              </excludes>
            </filter>
            <filter>
              <artifact>cheshire:cheshire</artifact>
              <excludes>
                <exclude>**/*.clj</exclude>
              </excludes>
            </filter>
            <filter>
              <artifact>org.clojure:tools.logging</artifact>
              <excludes>
                <exclude>**/*.clj</exclude>
              </excludes>
            </filter>
            <filter>
              <artifact>org.clojure:tools.namespace</artifact>
              <excludes>
                <exclude>**/*.clj</exclude>
              </excludes>
            </filter>
            <filter>
              <artifact>org.clojure:math.numeric-tower</artifact>
              <excludes>
                <exclude>**/*.clj</exclude>
              </excludes>
            </filter>
            <filter>
              <artifact>org.clojure:tools.macro</artifact>
              <excludes>
                <exclude>**/*.clj</exclude>
              </excludes>
            </filter>
            <filter>
              <artifact>org.clojure:tools.cli</artifact>
              <excludes>
                <exclude>**/*.clj</exclude>
              </excludes>
            </filter>
            <filter>
              <artifact>ns-tracker:ns-tracker</artifact>
              <excludes>
                <exclude>**/*.clj</exclude>
              </excludes>
            </filter>
            <filter>
              <artifact>clout:clout</artifact>
              <excludes>
                <exclude>**/*.clj</exclude>
              </excludes>
            </filter>
            <filter>
              <artifact>hiccup:hiccup</artifact>
              <excludes>
                <exclude>**/*.clj</exclude>
              </excludes>
            </filter>
            <filter>
              <artifact>clj-time:clj-time</artifact>
              <excludes>
                <exclude>**/*.clj</exclude>
              </excludes>
            </filter>
            <filter>
              <artifact>ring:*</artifact>
              <excludes>
                <exclude>**/*.clj</exclude>
              </excludes>
            </filter>
            <filter>
              <artifact>compojure:compojure</artifact>
              <excludes>
                <exclude>**/*.clj</exclude>
              </excludes>
            </filter>
            <filter>
              <artifact>org.apache.thrift:*</artifact>
              <excludes>
                <exclude>META-INF/LICENSE.txt</exclude>
                <exclude>META-INF/NOTICE.txt</exclude>
              </excludes>
            </filter>
            <filter>
              <artifact>io.netty:netty</artifact>
              <excludes>
                <exclude>META-INF/LICENSE.txt</exclude>
                <exclude>META-INF/NOTICE.txt</exclude>
              </excludes>
            </filter>
            <filter>
              <artifact>org.apache.zookeeper:zookeeper</artifact>
              <excludes>
                <exclude>LICENSE.txt</exclude>
              </excludes>
            </filter>
            <filter>
              <artifact>org.apache.commons:commons-exec</artifact>
              <excludes>
                <exclude>META-INF/LICENSE.txt</exclude>
                <exclude>META-INF/NOTICE.txt</exclude>
              </excludes>
            </filter>
            <filter>
              <artifact>commons-io:commons-io</artifact>
              <excludes>
                <exclude>META-INF/LICENSE.txt</exclude>
                <exclude>META-INF/NOTICE.txt</exclude>
              </excludes>
            </filter>
            <filter>
              <artifact>commons-codec:commons-codec</artifact>
              <excludes>
                <exclude>META-INF/LICENSE.txt</exclude>
                <exclude>META-INF/NOTICE.txt</exclude>
              </excludes>
            </filter>
            <filter>
              <artifact>commons-fileupload:commons-fileupload</artifact>
              <excludes>
                <exclude>META-INF/LICENSE.txt</exclude>
                <exclude>META-INF/NOTICE.txt</exclude>
              </excludes>
            </filter>
            <filter>
              <artifact>commons-lang:commons-lang</artifact>
              <excludes>
                <exclude>META-INF/LICENSE.txt</exclude>
                <exclude>META-INF/NOTICE.txt</exclude>
              </excludes>
            </filter>
            <filter>
              <artifact>joda-time:joda-time</artifact>
              <excludes>
                <exclude>META-INF/LICENSE.txt</exclude>
                <exclude>META-INF/NOTICE.txt</exclude>
              </excludes>
            </filter>
          </filters>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.storm</groupId>
        <artifactId>storm-maven-plugins</artifactId>
        <version>${project.version}</version>
        <executions>
          <execution>
            <id>version-info</id>
            <phase>generate-resources</phase>
            <goals>
              <goal>version-info</goal>
            </goals>
            <configuration>
              <source>
                <directory>${basedir}/src/</directory>
                <includes>
                  <include>jvm/**/*.java</include>
                  <include>clj/**/*.clj</include>
                </includes>
              </source>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-dependency-plugin</artifactId>
        <version>2.8</version>
        <executions>
          <execution>
            <id>copy-dependencies</id>
            <phase>package</phase>
            <goals>
              <goal>copy-dependencies</goal>
            </goals>
            <configuration>
              <overWriteReleases>false</overWriteReleases>
              <overWriteSnapshots>false</overWriteSnapshots>
              <overWriteIfNewer>true</overWriteIfNewer>
              <includeScope>runtime</includeScope>
            </configuration>
          </execution>
          <execution>
            <id>unpack</id>
            <phase>process-test-resources</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>org.apache.storm</groupId>
                  <artifactId>multilang-ruby</artifactId>
                  <version>${project.version}</version>
                </artifactItem>
                <artifactItem>
                  <groupId>org.apache.storm</groupId>
                  <artifactId>multilang-python</artifactId>
                  <version>${project.version}</version>
                </artifactItem>
                <artifactItem>
                  <groupId>org.apache.storm</groupId>
                  <artifactId>multilang-javascript</artifactId>
                  <version>${project.version}</version>
                </artifactItem>
              </artifactItems>
              <outputDirectory>${project.build.directory}/test-classes</outputDirectory>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-source-plugin</artifactId>
        <version>2.2.1</version>
        <executions>
          <execution>
            <id>attach-sources</id>
            <goals>
              <goal>jar-no-fork</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
  <profiles>
    <profile>
      <id>coverage</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>build-helper-maven-plugin</artifactId>
            <version>1.7</version>
            <executions>
              <execution>
                <id>add-source</id>
                <phase>generate-sources</phase>
                <goals>
                  <goal>add-source</goal>
                </goals>
                <configuration>
                  <sources>
                    <source>src/clj</source>
                  </sources>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <artifactId>maven-antrun-plugin</artifactId>
            <version>1.7</version>
            <executions>
              <execution>
                <id>pre-test-jacoco-clean</id>
                <phase>process-test-classes</phase>
                <goals>
                  <goal>run</goal>
                </goals>
                <configuration>
                  <tasks>
                    <delete />
                  </tasks>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.jacoco</groupId>
            <artifactId>jacoco-maven-plugin</artifactId>
            <version>0.7.2.201409121644</version>
            <executions>
              <execution>
                <id>prepare-agent</id>
                <goals>
                  <goal>prepare-agent</goal>
                </goals>
                <configuration>
                  <append>true</append>
                  <excludes>
                    <exclude>backtype/storm/metric/api/IMetricsConsumer$DataPointFieldAccess</exclude>
                    <exclude>backtype/storm/metric/api/IMetricsConsumer$TaskInfoFieldAccess</exclude>
                    <exclude>backtype/storm/testing/TestSerObjectFieldAccess</exclude>
                  </excludes>
                </configuration>
              </execution>
              <execution>
                <id>report</id>
                <phase>prepare-package</phase>
                <goals>
                  <goal>report</goal>
                </goals>
                <configuration>
                  <excludes>
                    <exclude>backtype/storm/generated/*</exclude>
                  </excludes>
                  <includes>
                    <include>backtype/*/*/*/*</include>
                    <include>backtype/*/*/*</include>
                    <include>backtype/*/*</include>
                    <include>backtype/*</include>
                    <include>zilch/*</include>
                    <include>storm/*/*/*/*</include>
                    <include>storm/*/*/*</include>
                    <include>storm/*/*</include>
                    <include>storm/*</include>
                  </includes>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>native</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>exec-maven-plugin</artifactId>
            <version>1.2.1</version>
            <executions>
              <execution>
                <phase>generate-sources</phase>
                <goals>
                  <goal>exec</goal>
                </goals>
              </execution>
            </executions>
            <configuration>
              <executable>sh</executable>
              <arguments>
                <argument>-c</argument>
                <argument>mkdir -p ${project.build.directory}/; cp -rufv ${basedir}/src/native/ ${project.build.directory}/</argument>
              </arguments>
            </configuration>
          </plugin>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>make-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>compile</id>
                <phase>compile</phase>
                <goals>
                  <goal>autoreconf</goal>
                  <goal>configure</goal>
                  <goal>make-install</goal>
                </goals>
              </execution>
              <execution>
                <id>test</id>
                <phase>test</phase>
                <goals>
                  <goal>test</goal>
                </goals>
              </execution>
            </executions>
            <configuration>
              <workDir>${project.build.directory}/native/worker-launcher</workDir>
              <arguments>
                <argument>-i</argument>
              </arguments>
              <configureEnvironment>
                <property>
                  <name>CFLAGS</name>
                  <value>-DEXEC_CONF_DIR=${worker-launcher.conf.dir} ${worker-launcher.additional_cflags}</value>
                </property>
              </configureEnvironment>
              <configureWorkDir>${project.build.directory}/native/worker-launcher</configureWorkDir>
              <prefix>/usr/local</prefix>
              <destDir>${project.build.directory}/native/target</destDir>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
  <dependencies>
    <dependency>
      <groupId>com.esotericsoftware.kryo</groupId>
      <artifactId>kryo</artifactId>
      <version>2.21</version>
      <scope>compile</scope>
      <exclusions>
        <exclusion>
          <artifactId>objenesis</artifactId>
          <groupId>org.objenesis</groupId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.clojure</groupId>
      <artifactId>clojure</artifactId>
      <version>1.6.0</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.clojure</groupId>
      <artifactId>tools.nrepl</artifactId>
      <version>0.2.3</version>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <artifactId>clojure</artifactId>
          <groupId>org.clojure</groupId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>clojure-complete</groupId>
      <artifactId>clojure-complete</artifactId>
      <version>0.2.3</version>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <artifactId>clojure</artifactId>
          <groupId>org.clojure</groupId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.clojars.runa</groupId>
      <artifactId>conjure</artifactId>
      <version>2.1.3</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.clojure</groupId>
      <artifactId>clojure-contrib</artifactId>
      <version>1.2.0</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.clojure</groupId>
      <artifactId>data.codec</artifactId>
      <version>0.1.0</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.googlecode.disruptor</groupId>
      <artifactId>disruptor</artifactId>
      <version>2.10.4</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-api</artifactId>
      <version>2.1</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-core</artifactId>
      <version>2.1</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-slf4j-impl</artifactId>
      <version>2.1</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>log4j-over-slf4j</artifactId>
      <version>1.6.6</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-all</artifactId>
      <version>1.9.5</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.hadoop</groupId>
      <artifactId>hadoop-auth</artifactId>
      <version>2.4.0</version>
      <scope>compile</scope>
      <exclusions>
        <exclusion>
          <artifactId>junit</artifactId>
          <groupId>junit</groupId>
        </exclusion>
        <exclusion>
          <artifactId>mockito-all</artifactId>
          <groupId>org.mockito</groupId>
        </exclusion>
        <exclusion>
          <artifactId>jetty-util</artifactId>
          <groupId>org.mortbay.jetty</groupId>
        </exclusion>
        <exclusion>
          <artifactId>jetty</artifactId>
          <groupId>org.mortbay.jetty</groupId>
        </exclusion>
        <exclusion>
          <artifactId>servlet-api</artifactId>
          <groupId>javax.servlet</groupId>
        </exclusion>
        <exclusion>
          <artifactId>slf4j-api</artifactId>
          <groupId>org.slf4j</groupId>
        </exclusion>
        <exclusion>
          <artifactId>commons-codec</artifactId>
          <groupId>commons-codec</groupId>
        </exclusion>
        <exclusion>
          <artifactId>log4j</artifactId>
          <groupId>log4j</groupId>
        </exclusion>
        <exclusion>
          <artifactId>slf4j-log4j12</artifactId>
          <groupId>org.slf4j</groupId>
        </exclusion>
        <exclusion>
          <artifactId>hadoop-minikdc</artifactId>
          <groupId>org.apache.hadoop</groupId>
        </exclusion>
        <exclusion>
          <artifactId>apacheds-kerberos-codec</artifactId>
          <groupId>org.apache.directory.server</groupId>
        </exclusion>
        <exclusion>
          <artifactId>log4j</artifactId>
          <groupId>log4j</groupId>
        </exclusion>
        <exclusion>
          <artifactId>slf4j-log4j12</artifactId>
          <groupId>org.slf4j</groupId>
        </exclusion>
        <exclusion>
          <artifactId>httpclient</artifactId>
          <groupId>org.apache.httpcomponents</groupId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.11</version>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <artifactId>hamcrest-core</artifactId>
          <groupId>org.hamcrest</groupId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>servlet-api</artifactId>
      <version>2.5</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <version>1.7.7</version>
      <scope>compile</scope>
    </dependency>
  </dependencies>
  <properties>
    <worker-launcher.conf.dir>/etc/storm</worker-launcher.conf.dir>
  </properties>
</project>

